% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trainSimilarityBasedReasoning.R
\name{trainSimilarityBasedReasoning}
\alias{trainSimilarityBasedReasoning}
\title{Train Similarity Based Probability Model}
\usage{
trainSimilarityBasedReasoning(data, coding_index_w_codes,
  coding_index_without_codes, preprocessing = list(stopwords =
  tm::stopwords("de"), stemming = NULL, strPreprocessing = TRUE, removePunct =
  FALSE), dist.type = c("wordwise", "substring", "fulltext"),
  dist.control = list(method = "osa", weight = c(d = 1, i = 1, s = 1, t = 1)),
  threshold = c(max = 3, use = 1), simulation.control = list(n.draws = 250,
  check.normality = FALSE), tmp_folder = "similarityTables")
}
\arguments{
\item{data}{a data.table created with \code{\link{removeFaultyAndUncodableAnswers_And_PrepareForAnalysis}}}

\item{coding_index_w_codes}{a data.table with columns
\describe{
  \item{title}{a character vector, a preprocessed character vector with entries from the coding index.}
  \item{Code}{a character vector with associated classification codes.}
}}

\item{coding_index_without_codes}{a preprocessed character vector, similar to \code{coding_index_w_codes$title}.}

\item{preprocessing}{a list with elements
\describe{
  \item{stopwords}{a character vector, use \code{tm::stopwords("de")} for German stopwords. Only used if \code{dist.type = "wordwise"}.}
  \item{stemming}{\code{NULL} for no stemming and \code{"de"} for stemming using the German porter stemmer. Do not use unless the \code{coding_index$title} was stemmed.}
  \item{strPreprocessing}{\code{TRUE} if \code{\link{stringPreprocessing}} shall be used.}
  \item{removePunct}{\code{TRUE} if \code{\link[tm]{removePunctuation}} shall be used.}
}}

\item{dist.type}{How to calculate similarity between entries from both coding_indices and verbal answers from the survey? Three options are currently supported.
\describe{
  \item{dist.type = "fulltext"}{Uses the \code{\link[stringdist]{stringdist}}-function directly after preprocessing to calculate distances. (the simplest approach but least useful.)}
  \item{dist.type = "substring"}{An entry from the coding index and a verbal answer are similar if the entry from the coding index is a substring of the verbal answer.}
  \item{dist.type = "wordwise"}{After preprocessing, split the verbal answer into words. Then calculate for each word separately the the similarity with entries from the coding index, using \code{\link[stringdist]{stringdist}}. Not the complete verbal answer but only the words (0 or more) that have highest similarity are then used to determine similarity with entries from the coding index.}
}}

\item{dist.control}{If \code{dist.type = "fulltext"} or \code{dist.type = "wordwise"} the entries from this list will be passed to \code{\link[stringdist]{stringdist}}. Currently only two possible entries are supported (method = "osa", weight = c(d = 1, i = 1, s = 1, t = 1) is recommended), but one could easily extend the functionality.}

\item{threshold}{A numeric vector with two elements. If \code{dist.type = "fulltext"} or \code{dist.type = "wordwise"}, the treshold determines up to which distance a verbal answer and an entry from the coding index are similar. The second number is actually used for this. The first number should be identical or larger than the second number. It is only used to speed up similarity calculations.}

\item{simulation.control}{a list with two components,
\describe{
  \item{n.draws}{Number of draws from the posterior distribution to determine posterior predictive probabilities. The larger, the more precise the results will be.}
  \item{check.normality}{We would like that the hyperprior distribution is normal. Set check.normality to TRUE to do some diagnostics about this.}
}}

\item{tmp_folder}{The name of a folder where the algorithm will store the results from similarity calculations. Links between verbal answers and coding indices are only stored if the distance is \code{<= threshold[1]}}
}
\value{
a list with components
\describe{
  \item{prediction.datasets$modelProb}{Contains all entries from the coding index. dist = "official" if the entry stems from coding_index_w_codes and dist = selfcreated if the entry stems from coding_index_without_codes. \code{string.prob} is used for weighting purposes (model averaging) if a new verbal answer is similar to multiple strings. \code{unobserved.mean.theta} gives a probability (usually very low) for any category that was not observed in the training data together with this string.}
  \item{prediction.datasets$categoryProb}{\code{mean.theta} is the probability for \code{code} given that an incoming verbal answer is similar to \code{string}. Only available if this code was at least a single time observed with this string (Use \code{unobserved.mean.theta} otherwise).}
  \item{num.allowed.codes}{Number of categories in the classification.}
  \item{preprocessing}{The input parameter stored to replicate preprocessing with incoming data.}
  \item{dist.type}{The input parameter stored to replicate distance calculations with incoming data.}
  \item{dist.control}{The input parameter stored to replicate distance calculations with incoming data.}
  \item{threshold}{The input parameter stored to replicate distance calculations with incoming data.}
  \item{simulation.control}{The input parameter.}
}
}
\description{
For each entry in the coding index, look up how answers that are similar to the coding index were coded in training data and calculate probabilities.
}
\details{
Since we use the \code{\link[stringdist]{stringdist}}-function excessively, one could easily extend
}
\examples{
###############################################
load frequent_phrases that are not part of the coding index (should contain words that are meaningful for occupation coding)
(manually created in files Z:/Eigene Dateien/in work/Analysis to prepare interview coding/v_6_prediction_with_dictionary_and_training_data_using_dictionary_information AND Z:/Eigene Dateien/in work/Analysis to prepare interview coding/data_preparation_model_estimation_for_AWS.r)
#############################################
load("Z:/Eigene Dateien/in work/Algorithms for Occupation Coding/data/freqent_phrases_prepared_from_ALWA_PASS_BIBB_KIGGS_GEDA_with_privacy_restriction.RData")

# set up data
data(occupations)
allowed.codes <- c("71402", "71403", "63302", "83112", "83124", "83131", "83132", "83193", "83194", "-0004", "-0030")
allowed.codes.titles <- c("Office clerks and secretaries (without specialisation)-skilled tasks", "Office clerks and secretaries (without specialisation)-complex tasks", "Gastronomy occupations (without specialisation)-skilled tasks",
 "Occupations in child care and child-rearing-skilled tasks", "Occupations in social work and social pedagogics-highly complex tasks", "Pedagogic specialists in social care work and special needs education-unskilled/semiskilled tasks", "Pedagogic specialists in social care work and special needs education-skilled tasks", "Supervisors in education and social work, and of pedagogic specialists in social care work", "Managers in education and social work, and of pedagogic specialists in social care work",
 "Not precise enough for coding", "Student assistants")
proc.occupations <- removeFaultyAndUncodableAnswers_And_PrepareForAnalysis(occupations, colNames = c("orig_answer", "orig_code"), allowed.codes, allowed.codes.titles)

# train model
simBasedModel <- trainSimilarityBasedReasoning(data = proc.occupations,
                              coding_index_w_codes = coding_index_excerpt,
                              coding_index_without_codes = frequent_phrases,
                              preprocessing = list(stopwords = tm::stopwords("de"), stemming = NULL, strPreprocessing = TRUE, removePunct = FALSE),
                              dist.type = "wordwise",
                              dist.control = list(method = "osa", weight = c(d = 1, i = 1, s = 1, t = 1)),
                              threshold = c(max = 3, use = 1), simulation.control = list(n.draws = 50, check.normality = FALSE),
                              tmp_folder = "similarityTables")
}
\seealso{
See \code{\link{predictSimilarityBasedReasoning}} for more examples and recommended settings.

\code{\link{createSimilarityTableWordwiseStringdist}}, \code{\link{createSimilarityTableSubstring}}, \code{\link{createSimilarityTableStringdist}} for implementations of the different \code{dist.type}. \code{\link{frequent_phrases}} is a character vector with frequent German answers.
}
