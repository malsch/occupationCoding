% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createSimilarityTableStringdist.R
\name{createSimilarityTableStringdist}
\alias{createSimilarityTableStringdist}
\title{Similarity Table with Coding index}
\usage{
createSimilarityTableStringdist(unique.string, coding_index_w_codes,
  coding_index_without_codes, dist.control = list(method = "osa", weight
  = c(d = 1, i = 1, s = 1, t = 1)), threshold = 3)
}
\arguments{
\item{unique.string}{a character vector (usually unique(answer))}

\item{coding_index_w_codes}{a data.table with columns "title" and "Code".}

\item{coding_index_without_codes}{a character vector of additional titles}

\item{dist.control}{a list that will be passed to \code{\link[stringdist]{stringdistmatrix}}. Currently only two elements are implemented:
\describe{
  \item{method}{Method for distance calculation.}
  \item{weight}{For method='osa' or 'dl'.}
}}

\item{threshold}{All entries with distance above this threshold will be removed from the result}
}
\value{
a list with elements
\describe{
  \item{dist_table_w_code}{a data.table with colummns \code{intString}, \code{dictString.title}, \code{dictString.Code}, \code{dist}}
  \item{dist_table_without_code}{\code{NULL} or a data.table with colummns \code{intString}, \code{dictString}, \code{dist}}
  \item{vect_vocab}{see \code{link{asDocumentTermMatrix}}}
}
}
\description{
Calculate string similarity between \code{unique.string} and \code{(coding_index_w_codes, coding_index_without_codes)}.
}
\details{
Special function for similarity-based reasoning: creates distance data with osa-method c(d = 1, i = 1, s = 1, t = 1)
dist == 0: strings in dict and data are identical
}
\examples{
## Prepare coding index
# write female titles beneath the male title
coding_index <- rbind(coding_index_excerpt[, list(title = bezMale, Code)],
                      coding_index_excerpt[, list(title = bezFemale, Code)])
# standardize titles from the coding index
coding_index <- coding_index[,title := stringPreprocessing(title)]
# drop duplicate lines, might be suboptimal because we keep each title and its associated code only a single time. This means we delete duplicates and the associated, possibly relevant codes.
coding_index <- coding_index[!duplicated(title)]

(x <- c("Abgeordneter", "Abgeordneter", "Abgeordnete", "abgeordnet", "FSJ", "FSJ2", "Industriemechaniker", "Dipl.-Ing. - Agrarwirtschaft (Landwirtschaft)"))
createSimilarityTableStringdist(unique.string = stringPreprocessing(x),
                                coding_index_w_codes = coding_index,
                                coding_index_without_codes = frequent_phrases,
                                dist.control = list(method = "osa", weight = c(d = 1, i = 1, s = 1, t = 1)),
                                threshold = 3)
}
\seealso{
\code{\link{trainSimilarityBasedReasoning}}, \code{\link{createSimilarityTableWordwiseStringdist}}, \code{\link{createSimilarityTableSubstring}}
}
